#=======================~~~~~~~~~~~~~~~~~~~~=======================#
#===                                                            ===#
#==   /[]    []\      /[][][]\     /[][][][][]\    [][]   /[][]  ==#
#=   [][]\  /[][]    /[]    []\    [][]     [][]   [][] /[][]/    =#
#=~~~[][==oo==][]~~~/][]~~~~[][\~~~[=o][][=o=]/~~~~[][=o=]~~~~~~~~=#
#=   [][]/  \[][]   [][==oo==][]   [][] \[][]\     [][] \[][]\    =#
#==   \[]    []/    [=o]    [o=]   [=o]    \[][]   [=o]   \[o=]  ==#
#===                                                            ===#
#=======================~~~~~~~~~~~~~~~~~~~~==============[v1.0.0]=#
#=========================                =========================#
#============                                          ============#
#=======                 Configuration file                 =======#
#===== ------------------------------------------------------ =====#
#====                                                          ====#
#===   # = comment                                              ===#
#==    | = array separator                                       ==#
#==    %(USER) = user name                                       ==#
#==    %(HOME) = home directory                                  ==#
#==    $(OBJ) = replace by the content of OBJ                    ==#
#===                                                            ===#
#=== ---------------------------------------------------------- ===#
#=====                                                        =====#
#============                 OpenHark                 ============#
##========================                ========================##
####============================================================####


########## Global settings ##########

### Files to clean
# : Array
Clean = $(CacheFile) | $(OutputFiles)

CacheFile = .make/.make-cache
UseCache = yes

ShowErrorCommandLine = no

GenerateDoc = no

# <internal>
OutputFiles = $(Cs-UnitTesting-DestinationPath)/$(Cs-UnitTesting-OutputName) \
        | $(Cs-LibraryCore-DestinationPath)/$(Cs-LibraryCore-OutputName) \
        | $(Fs-Parsers-DestinationPath)/$(Fs-Parsers-OutputName) \
        | $(Fs-AI-DestinationPath)/$(Fs-AI-OutputName) \
        | $(Cs-Parsers-Generic-DestinationPath)/$(Cs-Parsers-Generic-OutputName) \
        | $(Cs-Security-DestinationPath)/$(Cs-Security-OutputName) \
        | $(Cs-Net-DestinationPath)/$(Cs-Net-OutputName)

# <internal>
Cs-CompilerName = csc.exe

# <internal>
Fs-CompilerName = fsc.exe

# <internal>
SourcePath = src

# <internal>
OutputFolder = out

Fs-CommonFolder = $(SourcePath)/FsCommon

### Projects to compile (property name)
# : Array
# The order is important
# Cs = C# ; Fs = F#
Projects = Cs-LibraryCore \
        | Fs-Parsers \
        | Cs-Parsers-Generic \
        | Cs-Net \
        | Cs-AI \
        | Cs-Security \
        | Cs-UnitTesting

# surface | complet
# surface = only seek files on the directory
# complet = seek for files in subfolders too
Fs-CommonFolderType = surface

########## Projects settings ##########
Cs-LibraryCore-CompilerName = $(Cs-CompilerName)
Cs-LibraryCore-OutputName = HarkLib.Core.dll
Cs-LibraryCore-SourcePath = $(SourcePath)/Core
Cs-LibraryCore-DestinationPath = $(OutputFolder)
Cs-LibraryCore-DocFullPath = 
Cs-LibraryCore-References = System.Numerics.dll
Cs-LibraryCore-Modules = 
Cs-LibraryCore-Target = library

# <internal>
Cs-LibraryCore = $(Cs-LibraryCore-DestinationPath)/$(Cs-LibraryCore-OutputName)

Cs-Security-CompilerName = $(Cs-CompilerName)
Cs-Security-OutputName = HarkLib.Security.dll
Cs-Security-SourcePath = $(SourcePath)/Security
Cs-Security-DestinationPath = $(OutputFolder)
Cs-Security-DocFullPath = 
Cs-Security-References = $(Cs-LibraryCore)
Cs-Security-Modules = 
Cs-Security-Target = library

Fs-Parsers-CompilerName = $(Fs-CompilerName)
Fs-Parsers-OutputName = HarkLib.Parsers.dll
Fs-Parsers-EntryPointFileName = main.fsx
Fs-Parsers-SourcePath = $(SourcePath)/Parsers
Fs-Parsers-DestinationPath = $(OutputFolder)
Fs-Parsers-DocFullPath = 
Fs-Parsers-References = 
Fs-Parsers-Target = library

Cs-Parsers-Generic-CompilerName = $(Cs-CompilerName)
Cs-Parsers-Generic-OutputName = HarkLib.Parsers.Generic.dll
Cs-Parsers-Generic-SourcePath = $(SourcePath)/Parsers.Generic
Cs-Parsers-Generic-DestinationPath = $(OutputFolder)
Cs-Parsers-Generic-DocFullPath = 
Cs-Parsers-Generic-References = $(Cs-LibraryCore) | System.Numerics.dll
Cs-Parsers-Generic-Modules = 
Cs-Parsers-Generic-Target = library

Cs-Net-CompilerName = $(Cs-CompilerName)
Cs-Net-OutputName = HarkLib.Net.dll
Cs-Net-SourcePath = $(SourcePath)/Net
Cs-Net-DestinationPath = $(OutputFolder)
Cs-Net-DocFullPath = 
Cs-Net-References = $(Cs-LibraryCore)
Cs-Net-Modules = 
Cs-Net-Target = library

Cs-AI-CompilerName = $(Cs-CompilerName)
Cs-AI-OutputName = HarkLib.AI.dll
Cs-AI-SourcePath = $(SourcePath)/AI
Cs-AI-DestinationPath = $(OutputFolder)
Cs-AI-DocFullPath = 
Cs-AI-References = $(Cs-LibraryCore)
Cs-AI-Modules = 
Cs-AI-Target = library

########## Unit testing ##########

Cs-UnitTesting-CompilerName = $(Cs-CompilerName)
Cs-UnitTesting-OutputName = unittesting.exe
Cs-UnitTesting-SourcePath = $(SourcePath)/UnitTesting
Cs-UnitTesting-DestinationPath = $(OutputFolder)
Cs-UnitTesting-DocFullPath = 
Cs-UnitTesting-References = $(Cs-LibraryCore-DestinationPath)/$(Cs-LibraryCore-OutputName) \
        | $(Cs-Security-DestinationPath)/$(Cs-Security-OutputName) \
        | $(Fs-Parsers-DestinationPath)/$(Fs-Parsers-OutputName) \
        | $(Cs-Net-DestinationPath)/$(Cs-Net-OutputName) \
        | $(Cs-AI-DestinationPath)/$(Cs-AI-OutputName) \
        | $(Cs-Parsers-Generic-DestinationPath)/$(Cs-Parsers-Generic-OutputName)
Cs-UnitTesting-Modules = 
Cs-UnitTesting-Target = exe

#=== ---------------------------------------------------------- ===#
#=====                                                        =====#
#============                                          ============#
#=========================                =========================#
#==================================================================#
####################################################################